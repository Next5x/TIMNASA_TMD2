const { cmd } = require('../command');

cmd({
    pattern: "hack",
    desc: "Displays a dynamic and playful 'Hacking' simulation message.",
    category: "fun",
    react: "üíª",
    filename: __filename
},
async (conn, mek, m, { from, quoted, reply }) => {
    try {
        const steps = [
            'üíª *‚úßTIMNASA TMD2‚úß HACKING SEQUENCE INITIATED...* üíª',
            '',
            '*Loading encryption bypass modules...* üîê',
            '*Establishing secure connection to mainframe...* üåê',
            '*Deploying rootkits...* üõ†Ô∏è',
            '',
            '```[‚ñìùöÉùô∏ùôºùôΩùô∞ùöÇùô∞-ùô∑ùô∞ùô≤ùô∫-ùöàùôæùöÑ‚ñì                    ] 10%``` ‚è≥',
            '```[‚ñì‚ñìùöÉùô∏ùôºùôΩùô∞ùöÇùô∞-ùô∑ùô∞ùô≤ùô∫‚ñì‚ñì‚ñì                ] 30%``` ‚è≥',
            '```[‚ñì‚ñì‚ñì‚ñìùöÉùô∏ùôºùôΩùô∞ùöÇùô∞-ùô∑ùô∞ùô≤ùô∫‚ñì‚ñì‚ñì‚ñì‚ñì           ] 50%``` ‚è≥',
            '```[‚ñì‚ñì‚ñì‚ñì‚ñìùöÉùô∏ùôºùôΩùô∞ùöÇùô∞-ùô∑ùô∞ùô≤ùô∫‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì       ] 70%``` ‚è≥',
            '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñìùöÉùô∏ùôºùôΩùô∞ùöÇùô∞-ùô∑ùô∞ùô≤ùô∫‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì   ] 90%``` ‚è≥',
            '```[‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñìùöÉùô∏ùôºùôΩùô∞ùöÇùô∞-ùô∑ùô∞ùô≤ùô∫‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì] 100%``` ‚úÖ',
            '',
            'üîí *System Breach Successful!* üîì',
            '*Gaining access to server logs...* üñ•Ô∏è',
            '*Extracting sensitive data...* üìÇ',
            '',
            '```[DATA CAPTURED: 3.2GB]``` üì°',
            '```[TRANSMISSION SECURED]``` üîí',
            '',
            'üöÄ *Operation Complete!*',
            '',
            '‚ö†Ô∏è _This is a simulated hacking activity for entertainment purposes._',
            '‚ö†Ô∏è _Remember: Ethical hacking ensures safety._',
            '',
            '> *‚úßTIMNASA TMD2‚úß: HACKING YOUR DIVAICE SIMULATION COMPLETE* ‚ò£'
        ];

        for (const step of steps) {
            await conn.sendMessage(from, { text: step }, { quoted: mek });
            await new Promise(resolve => setTimeout(resolve, 1200)); // Adjust delay for realism
        }
    } catch (error) {
        console.error(error);
        reply(`‚ùå *Error:* ${error.message}`);
    }
});
